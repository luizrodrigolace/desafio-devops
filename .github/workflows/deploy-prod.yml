name: Deploy Prod

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Aciona no lançamento de tags versionadas

jobs:
  deploy:
    name: Deploy to GCP - Prod
    runs-on: ubuntu-latest
    environment: production  # Ambiente protegido no GitHub

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
          terraform_wrapper: false

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_PROD }}  # Segredo diferente para produção
          workload_identity_provider: projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/github
          service_account: terraform-prod@desafio-devops-prod.iam.gserviceaccount.com

      - name: Set GCP Project and Region
        run: |
          echo "GOOGLE_CLOUD_PROJECT=desafio-devops-prod" >> $GITHUB_ENV
          echo "GOOGLE_CLOUD_REGION=us-central1" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init -backend-config="bucket=tf-state-prod-bucket"
        working-directory: ./infra/prod

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./infra/prod

      - name: Terraform Plan
        run: terraform plan -var="environment=prod"
        working-directory: ./infra/prod

      - name: Manual Approval  # Requer aprovação manual para produção
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: team-devops,seu-user

      - name: Terraform Apply
        if: success()
        run: terraform apply -auto-approve -var="environment=prod"
        working-directory: ./infra/prod

      - name: Post-Deployment Check
        run: |
          URL=$(gcloud run services describe meu-servico-prod \
            --region=us-central1 \
            --project=desafio-devops-prod \
            --format="value(status.url)")
          echo "Service URL: $URL"
          curl -I $URL/healthz